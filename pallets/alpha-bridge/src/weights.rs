
//! Autogenerated weights for `pallet_alpha_bridge`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 42.0.1
//! DATE: 2025-10-23, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Ubuntu-2404-noble-amd64-base`, CPU: `Intel(R) Xeon(R) CPU E3-1275 v5 @ 3.60GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// ./target/release/hippius
// benchmark
// pallet
// --runtime=./target/release/wbuild/hippius-mainnet-runtime/hippius_mainnet_runtime.compact.compressed.wasm
// --genesis-builder=runtime
// --pallet=pallet_alpha_bridge
// --extrinsic=*
// --steps=50
// --repeat=20
// --wasm-execution=compiled
// --heap-pages=4096
// --template=pallets/benchmarking/frame-weight-template.hbs
// --output=pallets/alpha-bridge/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_alpha_bridge`.
pub trait WeightInfo {
	fn propose_deposits(d: u32, ) -> Weight;
	fn attest_deposit() -> Weight;
	fn attest_unlock() -> Weight;
	fn request_unlock() -> Weight;
	fn expire_pending_deposit() -> Weight;
	fn expire_pending_unlock() -> Weight;
	fn add_guardian(g: u32, ) -> Weight;
	fn remove_guardian(g: u32, ) -> Weight;
	fn set_approve_threshold() -> Weight;
	fn set_deny_threshold() -> Weight;
	fn set_paused() -> Weight;
	fn set_global_mint_cap() -> Weight;
	fn set_signature_ttl() -> Weight;
}

/// Weights for `pallet_alpha_bridge` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `AlphaBridge::Guardians` (r:1 w:0)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::Paused` (r:1 w:0)
	/// Proof: `AlphaBridge::Paused` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::LastCheckpointNonce` (r:1 w:1)
	/// Proof: `AlphaBridge::LastCheckpointNonce` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ProcessedDeposits` (r:100 w:0)
	/// Proof: `AlphaBridge::ProcessedDeposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::PendingDeposits` (r:100 w:100)
	/// Proof: `AlphaBridge::PendingDeposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::TotalMintedByBridge` (r:1 w:0)
	/// Proof: `AlphaBridge::TotalMintedByBridge` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::GlobalMintCap` (r:1 w:0)
	/// Proof: `AlphaBridge::GlobalMintCap` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ApproveThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::ApproveThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::DenyThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::DenyThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `d` is `[1, 100]`.
	fn propose_deposits(d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `238`
		//  Estimated: `1723 + d * (2475 Â±0)`
		// Minimum execution time: 34_759_000 picoseconds.
		Weight::from_parts(27_115_541, 1723)
			// Standard Error: 7_102
			.saturating_add(Weight::from_parts(8_897_006, 0).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(d.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(d.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(d.into()))
	}
	/// Storage: `AlphaBridge::Guardians` (r:1 w:0)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::Paused` (r:1 w:0)
	/// Proof: `AlphaBridge::Paused` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::PendingDeposits` (r:1 w:1)
	/// Proof: `AlphaBridge::PendingDeposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::SignatureTTLBlocks` (r:1 w:0)
	/// Proof: `AlphaBridge::SignatureTTLBlocks` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ApproveThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::ApproveThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::DenyThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::DenyThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::TotalMintedByBridge` (r:1 w:1)
	/// Proof: `AlphaBridge::TotalMintedByBridge` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::GlobalMintCap` (r:1 w:0)
	/// Proof: `AlphaBridge::GlobalMintCap` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AlphaBridge::ProcessedDeposits` (r:0 w:1)
	/// Proof: `AlphaBridge::ProcessedDeposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn attest_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `454`
		//  Estimated: `3919`
		// Minimum execution time: 60_411_000 picoseconds.
		Weight::from_parts(61_580_000, 3919)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `AlphaBridge::Guardians` (r:1 w:0)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::Paused` (r:1 w:0)
	/// Proof: `AlphaBridge::Paused` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::PendingUnlocks` (r:1 w:1)
	/// Proof: `AlphaBridge::PendingUnlocks` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::SignatureTTLBlocks` (r:1 w:0)
	/// Proof: `AlphaBridge::SignatureTTLBlocks` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ApproveThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::ApproveThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::DenyThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::DenyThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AlphaBridge::TotalMintedByBridge` (r:1 w:1)
	/// Proof: `AlphaBridge::TotalMintedByBridge` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn attest_unlock() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `585`
		//  Estimated: `4050`
		// Minimum execution time: 71_526_000 picoseconds.
		Weight::from_parts(72_670_000, 4050)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `AlphaBridge::Paused` (r:1 w:0)
	/// Proof: `AlphaBridge::Paused` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AlphaBridge::NextBurnId` (r:1 w:1)
	/// Proof: `AlphaBridge::NextBurnId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::PendingUnlocks` (r:0 w:1)
	/// Proof: `AlphaBridge::PendingUnlocks` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn request_unlock() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `94`
		//  Estimated: `6196`
		// Minimum execution time: 68_533_000 picoseconds.
		Weight::from_parts(69_357_000, 6196)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `AlphaBridge::PendingDeposits` (r:1 w:1)
	/// Proof: `AlphaBridge::PendingDeposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::SignatureTTLBlocks` (r:1 w:0)
	/// Proof: `AlphaBridge::SignatureTTLBlocks` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ProcessedDeposits` (r:0 w:1)
	/// Proof: `AlphaBridge::ProcessedDeposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn expire_pending_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `180`
		//  Estimated: `3645`
		// Minimum execution time: 21_804_000 picoseconds.
		Weight::from_parts(22_285_000, 3645)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `AlphaBridge::PendingUnlocks` (r:1 w:1)
	/// Proof: `AlphaBridge::PendingUnlocks` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::SignatureTTLBlocks` (r:1 w:0)
	/// Proof: `AlphaBridge::SignatureTTLBlocks` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn expire_pending_unlock() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `454`
		//  Estimated: `6196`
		// Minimum execution time: 78_216_000 picoseconds.
		Weight::from_parts(78_617_000, 6196)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `AlphaBridge::Guardians` (r:1 w:1)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `g` is `[0, 100]`.
	fn add_guardian(g: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `58 + g * (32 Â±0)`
		//  Estimated: `1542 + g * (32 Â±0)`
		// Minimum execution time: 12_850_000 picoseconds.
		Weight::from_parts(14_725_697, 1542)
			// Standard Error: 518
			.saturating_add(Weight::from_parts(33_949, 0).saturating_mul(g.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 32).saturating_mul(g.into()))
	}
	/// Storage: `AlphaBridge::Guardians` (r:1 w:1)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ApproveThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::ApproveThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::DenyThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::DenyThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `g` is `[2, 100]`.
	fn remove_guardian(g: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `58 + g * (32 Â±0)`
		//  Estimated: `1543 + g * (32 Â±0)`
		// Minimum execution time: 15_782_000 picoseconds.
		Weight::from_parts(16_448_453, 1543)
			// Standard Error: 521
			.saturating_add(Weight::from_parts(31_688, 0).saturating_mul(g.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 32).saturating_mul(g.into()))
	}
	/// Storage: `AlphaBridge::Guardians` (r:1 w:0)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ApproveThreshold` (r:0 w:1)
	/// Proof: `AlphaBridge::ApproveThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_approve_threshold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `328`
		//  Estimated: `1813`
		// Minimum execution time: 11_057_000 picoseconds.
		Weight::from_parts(11_412_000, 1813)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AlphaBridge::Guardians` (r:1 w:0)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::DenyThreshold` (r:0 w:1)
	/// Proof: `AlphaBridge::DenyThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_deny_threshold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `328`
		//  Estimated: `1813`
		// Minimum execution time: 10_910_000 picoseconds.
		Weight::from_parts(11_206_000, 1813)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AlphaBridge::Paused` (r:0 w:1)
	/// Proof: `AlphaBridge::Paused` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_paused() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 7_607_000 picoseconds.
		Weight::from_parts(7_881_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AlphaBridge::TotalMintedByBridge` (r:1 w:0)
	/// Proof: `AlphaBridge::TotalMintedByBridge` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::GlobalMintCap` (r:0 w:1)
	/// Proof: `AlphaBridge::GlobalMintCap` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_global_mint_cap() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `20`
		//  Estimated: `1505`
		// Minimum execution time: 9_730_000 picoseconds.
		Weight::from_parts(10_090_000, 1505)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AlphaBridge::SignatureTTLBlocks` (r:0 w:1)
	/// Proof: `AlphaBridge::SignatureTTLBlocks` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_signature_ttl() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 7_296_000 picoseconds.
		Weight::from_parts(7_751_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `AlphaBridge::Guardians` (r:1 w:0)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::Paused` (r:1 w:0)
	/// Proof: `AlphaBridge::Paused` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::LastCheckpointNonce` (r:1 w:1)
	/// Proof: `AlphaBridge::LastCheckpointNonce` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ProcessedDeposits` (r:100 w:0)
	/// Proof: `AlphaBridge::ProcessedDeposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::PendingDeposits` (r:100 w:100)
	/// Proof: `AlphaBridge::PendingDeposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::TotalMintedByBridge` (r:1 w:0)
	/// Proof: `AlphaBridge::TotalMintedByBridge` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::GlobalMintCap` (r:1 w:0)
	/// Proof: `AlphaBridge::GlobalMintCap` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ApproveThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::ApproveThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::DenyThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::DenyThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `d` is `[1, 100]`.
	fn propose_deposits(d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `238`
		//  Estimated: `1723 + d * (2475 Â±0)`
		// Minimum execution time: 34_759_000 picoseconds.
		Weight::from_parts(27_115_541, 1723)
			// Standard Error: 7_102
			.saturating_add(Weight::from_parts(8_897_006, 0).saturating_mul(d.into()))
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(d.into())))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(d.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(d.into()))
	}
	/// Storage: `AlphaBridge::Guardians` (r:1 w:0)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::Paused` (r:1 w:0)
	/// Proof: `AlphaBridge::Paused` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::PendingDeposits` (r:1 w:1)
	/// Proof: `AlphaBridge::PendingDeposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::SignatureTTLBlocks` (r:1 w:0)
	/// Proof: `AlphaBridge::SignatureTTLBlocks` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ApproveThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::ApproveThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::DenyThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::DenyThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::TotalMintedByBridge` (r:1 w:1)
	/// Proof: `AlphaBridge::TotalMintedByBridge` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::GlobalMintCap` (r:1 w:0)
	/// Proof: `AlphaBridge::GlobalMintCap` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AlphaBridge::ProcessedDeposits` (r:0 w:1)
	/// Proof: `AlphaBridge::ProcessedDeposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn attest_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `454`
		//  Estimated: `3919`
		// Minimum execution time: 60_411_000 picoseconds.
		Weight::from_parts(61_580_000, 3919)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `AlphaBridge::Guardians` (r:1 w:0)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::Paused` (r:1 w:0)
	/// Proof: `AlphaBridge::Paused` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::PendingUnlocks` (r:1 w:1)
	/// Proof: `AlphaBridge::PendingUnlocks` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::SignatureTTLBlocks` (r:1 w:0)
	/// Proof: `AlphaBridge::SignatureTTLBlocks` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ApproveThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::ApproveThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::DenyThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::DenyThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AlphaBridge::TotalMintedByBridge` (r:1 w:1)
	/// Proof: `AlphaBridge::TotalMintedByBridge` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn attest_unlock() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `585`
		//  Estimated: `4050`
		// Minimum execution time: 71_526_000 picoseconds.
		Weight::from_parts(72_670_000, 4050)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `AlphaBridge::Paused` (r:1 w:0)
	/// Proof: `AlphaBridge::Paused` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AlphaBridge::NextBurnId` (r:1 w:1)
	/// Proof: `AlphaBridge::NextBurnId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::PendingUnlocks` (r:0 w:1)
	/// Proof: `AlphaBridge::PendingUnlocks` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn request_unlock() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `94`
		//  Estimated: `6196`
		// Minimum execution time: 68_533_000 picoseconds.
		Weight::from_parts(69_357_000, 6196)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `AlphaBridge::PendingDeposits` (r:1 w:1)
	/// Proof: `AlphaBridge::PendingDeposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::SignatureTTLBlocks` (r:1 w:0)
	/// Proof: `AlphaBridge::SignatureTTLBlocks` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ProcessedDeposits` (r:0 w:1)
	/// Proof: `AlphaBridge::ProcessedDeposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn expire_pending_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `180`
		//  Estimated: `3645`
		// Minimum execution time: 21_804_000 picoseconds.
		Weight::from_parts(22_285_000, 3645)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `AlphaBridge::PendingUnlocks` (r:1 w:1)
	/// Proof: `AlphaBridge::PendingUnlocks` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::SignatureTTLBlocks` (r:1 w:0)
	/// Proof: `AlphaBridge::SignatureTTLBlocks` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn expire_pending_unlock() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `454`
		//  Estimated: `6196`
		// Minimum execution time: 78_216_000 picoseconds.
		Weight::from_parts(78_617_000, 6196)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `AlphaBridge::Guardians` (r:1 w:1)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `g` is `[0, 100]`.
	fn add_guardian(g: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `58 + g * (32 Â±0)`
		//  Estimated: `1542 + g * (32 Â±0)`
		// Minimum execution time: 12_850_000 picoseconds.
		Weight::from_parts(14_725_697, 1542)
			// Standard Error: 518
			.saturating_add(Weight::from_parts(33_949, 0).saturating_mul(g.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 32).saturating_mul(g.into()))
	}
	/// Storage: `AlphaBridge::Guardians` (r:1 w:1)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ApproveThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::ApproveThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::DenyThreshold` (r:1 w:0)
	/// Proof: `AlphaBridge::DenyThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `g` is `[2, 100]`.
	fn remove_guardian(g: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `58 + g * (32 Â±0)`
		//  Estimated: `1543 + g * (32 Â±0)`
		// Minimum execution time: 15_782_000 picoseconds.
		Weight::from_parts(16_448_453, 1543)
			// Standard Error: 521
			.saturating_add(Weight::from_parts(31_688, 0).saturating_mul(g.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 32).saturating_mul(g.into()))
	}
	/// Storage: `AlphaBridge::Guardians` (r:1 w:0)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::ApproveThreshold` (r:0 w:1)
	/// Proof: `AlphaBridge::ApproveThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_approve_threshold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `328`
		//  Estimated: `1813`
		// Minimum execution time: 11_057_000 picoseconds.
		Weight::from_parts(11_412_000, 1813)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AlphaBridge::Guardians` (r:1 w:0)
	/// Proof: `AlphaBridge::Guardians` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::DenyThreshold` (r:0 w:1)
	/// Proof: `AlphaBridge::DenyThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_deny_threshold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `328`
		//  Estimated: `1813`
		// Minimum execution time: 10_910_000 picoseconds.
		Weight::from_parts(11_206_000, 1813)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AlphaBridge::Paused` (r:0 w:1)
	/// Proof: `AlphaBridge::Paused` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_paused() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 7_607_000 picoseconds.
		Weight::from_parts(7_881_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AlphaBridge::TotalMintedByBridge` (r:1 w:0)
	/// Proof: `AlphaBridge::TotalMintedByBridge` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AlphaBridge::GlobalMintCap` (r:0 w:1)
	/// Proof: `AlphaBridge::GlobalMintCap` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_global_mint_cap() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `20`
		//  Estimated: `1505`
		// Minimum execution time: 9_730_000 picoseconds.
		Weight::from_parts(10_090_000, 1505)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AlphaBridge::SignatureTTLBlocks` (r:0 w:1)
	/// Proof: `AlphaBridge::SignatureTTLBlocks` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_signature_ttl() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 7_296_000 picoseconds.
		Weight::from_parts(7_751_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
